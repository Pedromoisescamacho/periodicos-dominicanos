fecha(dl_url)
fecha(dl_url[1])
fecha <- function(url){
title <- function(url){
noticia <- read_html(url)
pattern <- "[0-9].*M"
fecha_cruda <- noticia %>% html_nodes(".art-date") %>% html_text %>% gsub(pattern = ".*([0-9].{15,}M).*$","\\1", replacement = "\\1")
#fecha <-  as.POSIXct(format = "%d %b %Y, %H:%M %p")
#fecha <- ifelse(identical(fecha, character(0)), "NULL", fecha)
#fecha
fecha_cruda
}
return(tryCatch(title(url), error = function(e) "NULL"))
}
fecha(dl_url[1])
x2 <- fecha(dl_url[1])
x2
library(lubridate)
dmy_hms(x2)
as.POSIXct(x2,format = "%d %b %Y, %H:%M %p")
as.POSIXct(x2,format = "%d %b %Y, %H:%M %p") %>% class()
x3 <- as.POSIXct(x2,format = "%d %b %Y, %H:%M %p")
year(x3)
day(x3)
dia <- read.csv("https://raw.githubusercontent.com/Pedromoisescamacho/periodicos-dominicanos/master/noticias%20csv/dia_noticias.csv", stringsAsFactors = F)[,-1]
libre <- read.csv("https://raw.githubusercontent.com/Pedromoisescamacho/periodicos-dominicanos/master/noticias%20csv/diario_libre_noticias.csv", stringsAsFactors = F)[,-1]
hoy <- read.csv("https://raw.githubusercontent.com/Pedromoisescamacho/periodicos-dominicanos/master/noticias%20csv/hoy_noticias.csv", stringsAsFactors = F)[,-1]
listin <- read.csv("https://raw.githubusercontent.com/Pedromoisescamacho/periodicos-dominicanos/master/noticias%20csv/listin_diario_noticias.csv" , stringsAsFactors = F)[,-1]
nacional <- read.csv("https://raw.githubusercontent.com/Pedromoisescamacho/periodicos-dominicanos/master/noticias%20csv/nacional_noticias.csv" , stringsAsFactors = F)[,-1]
(total_not <- sapply(list("El Dia" = dia, "Diario Libre" = libre, "Hoy" = hoy, "Listin Diario" = listin, "El Nacional" = nacional), function(x) dim(x)[1]))
####limpiando los datos de los periodicos#######
library(dplyr)
library(lubridate)
######Diario Libre#####
#Revisando cantidad de NA o Null
colSums(is.na(libre))
######Diario Libre#####
#Revisando cantidad de NA o Null
colSums(libre== "NULL")
######Diario Libre#####
#Revisando cantidad de NA o Null
colSums(is.na(libre))
colSums(libre== "NULL") #
colSums(libre == "NULL")
colSums(libre == "NULL")
colSums(libre == NULL)
colSums(libre == "null")
colSums(is.null(libre))
apply(libre,2,function(x){sum(is.null(x))})
`colnames<-`
colnames(libre)
#cambiando nombre de las columnas
colnames(libre)[names(libre) =="contenidos2"] <- "contenidos"
names(libre)
#Estandarizando fechas
libre$fechas %>% head()
libre$fechas != "^[0-3][0-9].+M$"
libre$fechas != "^[0-3].+M$"
f <- libre$fechas %>% head(20)
f
grep("^[0-3][0-9].+M$", f,value = T)
grep("(^[0-3][0-9].+M$)|(NULL)", f,value = T)
grep(!"(^[0-3][0-9].+M$)|(NULL)", f,value = T)
sum(-grepl("(^[0-3][0-9].+M$)|(NULL)", f))
grepl("(^[0-3][0-9].+M$)|(NULL)", f))
grepl("(^[0-3][0-9].+M$)|(NULL)", f)
-grepl("(^[0-3][0-9].+M$)|(NULL)", f)
!grepl("(^[0-3][0-9].+M$)|(NULL)", f)
!grepl("(^[0-3][0-9].+M$)|(NULL)", f) %>% sum(0)
!grepl("(^[0-3][0-9].+M$)|(NULL)", f) %>% sum()
(!grepl("(^[0-3][0-9].+M$)|(NULL)", f)) %>% sum()
(!grepl("(^[0-3][0-9].+M$)|(NULL)", libre$fechas)) %>% sum()
nchar(libre$fechas) %>% summary()#revisando que la cantidad de caracteres este dentro de lo normla
f %>% as.POSIXct(format = "%d %b %Y, %H:%M %p")
f
grepl("(^[0-3][0-9].+M$)|(NULL)"
)
grepl("(^[0-3][0-9].+M$)|(NULL)", libre$fechas)
grepl("(^[0-3][0-9].+M$)|(NULL)", f)
grepl("(^[0-1][0-9].+M$)|(NULL)", f)
f
f <- libre$fechas[200:220]
f
f <- libre$fechas[1000]
f
f <- libre$fechas[1000:1050]
f
grepl("(^[0-1][0-9].+M$)|(NULL)", f)
grepl("(^[0-3][0-9][:blank:].+M$)|(NULL)", f)
grepl("(^[0-3][0-9][[:blank:]].+M$)|(NULL)", f)
grepl("(^[0-3][0-9][[:blank:]][A-z]{3}.+M$)|(NULL)", f)
#Estandarizando fechas
(!grepl("(^[0-3][0-9][[:blank:]][A-z]{3}.+M$)|(NULL)", libre$fechas)) %>% sum() #revisando que todas las fechas tengan el mismo formato
grepl("(^[0-3][0-9][[:blank:]][A-z]{3}[:blank:][1-2][0-9]{3}.+M$)|(NULL)", f)
grepl("(^[0-3][0-9][[:blank:]][A-z]{3}[[:blank:]][1-2].+M$)|(NULL)", f)
grepl("(^[0-3][0-9][[:blank:]][A-z]{3}[[:blank:]][1-2][0-9]{3}.+M$)|(NULL)", f)
f
grepl("(^[0-3][0-9][[:blank:]][A-z]{3}[[:blank:]][1-2][0-9]{3}.+M$)|(NULL)", f) %>% sum()
grepl("(^[0-3][0-9][[:blank:]][A-z]{3}[[:blank:]][1-2][0-9]{3}.+M$)|(NULL)", f) %>% sum()
grepl("(^[0-3][0-9][[:blank:]][A-z]{3}[[:blank:]][1-2][0-9]{3}.+M$)|(NULL)", f)
grepl("(^[0-3][0-9][[:blank:]][A-z]{3}[[:blank:]][1-2][0-9]{3},[[:blank:]][0-9].+M$)|(NULL)", f)
c("pedromoisescamacho@gmail.com", "predro_mvp13@hotmail.com.do")
grepl("(.*)@(.*)(\\..*)+")
email <- c("pedromoisescamacho@gmail.com", "predro_mvp13@hotmail.com.do")
grepl("(.*)@(.*)(\\..*)+", email)
gsub("(.*)@(.*)(\\..*)+", "\1", email)
gsub("(.*)@(.*)(\\..*)+", "\\1", email)
gsub("(.*)@(.*)(\\..*)+", "\\2", email)
libre$fechas <- as.POSIXct(libre$fechas,format = "%d %b %Y, %H:%M %p")
libre$fechas %>% class()
day(libre$fechas)
aÃ±o(libre$fechas)
day(libre$fechas) %>% is.na() %>% sum()
libre$fechas[libre$fechas == NA]
colSums(libre== "NULL") # 778, 302, 60: contenido, fechas, titulos respectivamente
names(libre)
summary(libre$fechas)
######Diario Libre#####
libre <- read.csv("https://raw.githubusercontent.com/Pedromoisescamacho/periodicos-dominicanos/master/noticias%20csv/diario_libre_noticias.csv", stringsAsFactors = F)[,-1]
colSums(libre== "NULL") # 778, 302, 60: contenido, fechas, titulos respectivamente
#cambiando nombre de las columnas
colnames(libre)[names(libre) =="contenidos2"] <- "contenidos"
libre$fechas2 <- as.POSIXct(libre$fechas,format = "%d %b %Y, %H:%M %p")
libre$fechas2[libre$fechas =! & libre$fechas2 == NA]
libre$fechas2[libre$fechas != & libre$fechas2 == NA]
libre$fechas2[libre$fechas != && libre$fechas2 == NA]
libre$fechas2[libre$fechas != "NULL" & libre$fechas2 == NA]
libre$fechas[libre$fechas != "NULL" & libre$fechas2 == NA]
libre$fechas %>% summary()
summary(libre)
sum(is.na(libre$fechas))
sum(libre$fechas== "NA")
sum(libre$fechas== NA)
sum(is.na(libre$fechas))
libre$fechas[libre$fechas != "NULL"]
libre$fechas[libre$fechas != "NULL"] %>% length()
dim(libre)
libre$fechas[(libre$fechas != "NULL") & (is.na(libre$fechas2))]
libre$fechas[(libre$fechas != "NULL") & (is.na(libre$fechas2))] %>% length()
504+302
libre$fechas[(libre$fechas != "NULL") & !(is.na(libre$fechas2))] %>% length()
libre$fechas[(libre$fechas != "NULL") & (is.na(libre$fechas2))] %>% gsub(pattern = "([A-Z]{3})", replacement = "\\1") %>% table
libre$fechas[(libre$fechas != "NULL") & (is.na(libre$fechas2))] %>% gsub(pattern = "([A-Z]{3})", replacement = "\1") %>% table
libre$fechas[(libre$fechas != "NULL") & (is.na(libre$fechas2))] %>% gsub(pattern = "^.*([A-Z]{3}).*$", replacement = "\\1") %>% table
Sys.setlocale(locale="es_ES.UTF-8")
system("locale -a", intern = TRUE)
Sys.setlocale(locale = "es")
library(readr)
parse_date("31 DICIEMBRE 2011","%d %B %Y",locale=locale("es"))
locale()
libre$fechas2 <- parse_date(libre$fechas,format = "%d %b %Y, %H:%M %p", locale = locale("es"))
f
libre$fechas2 <- parse_date(f,format = "%d %b %Y, %H:%M %p", locale = locale("es"))
libre$fechas2 <- parse_datetime(f,format = "%d %b %Y, %H:%M %p", locale = locale("es"))
libre$fechas2 <- parse_date_time(libre$fechas,"%d %b %Y, %H:%M %p", locale = locale("es"))
libre$fechas2 <- parse_date_time(libre$fechas,"%d %b %Y, %H:%M %p", locale = "es")
system("locale -a")
Sys.getlocale(
)
parse_date("31 DIC 2011","%d %b %Y",locale=locale("es"))
parse_date("31 DIC 2011","%d %B %Y",locale=locale("es"))
parse_date("31 DIC 2011","%d %b %Y",locale=locale("es"))
Sys.setlocale(locale="es_ES.UTF-8"
)
Sys.setlocale(locale="es_ES.UTF-8")
Sys.getlocale(category = "LC_TIME")
Sys.setlocale(category = "LC_ALL", locale = "es")
Sys.setlocale(category = "LC_ALL", locale = "es_ES.UTF-8")
f
locale(date_names = "es")
locale(date_names = "ES")
locale(date_names = "es")
parse_date("31 dic 2011","%d %b %Y",locale=locale("es"))
parse_date("31 dic 2011","%d %B %Y",locale=locale("es"))
parse_date("31 dic 2011","%d %b %Y",locale=locale("es"))
parse_date("31 ene 2011","%d %b %Y",locale=locale("es"))
parse_date("31 ene. 2011","%d %b %Y",locale=locale("es"))
date_names_langs()
locale("es")
locale("en")
gsub("DIC","DEC", libre$fechas)
libre$fecha <- gsub("DIC","DEC", libre$fechas)
libre$fecha <- gsub("AGO","AUG", libre$fechas)
libre$fechas2 <- as.POSIXct(libre$fechas,format = "%d %b %Y, %H:%M %p")
libre$fechas[(libre$fechas != "NULL") & (is.na(libre$fechas2))] %>% gsub(pattern = "^.*([A-Z]{3}).*$", replacement = "\\1") %>% table
libre$fechas2 <- as.POSIXct(libre$fechas,format = "%d %b %Y, %H:%M %p")
libre$fechas[(libre$fechas != "NULL") & (is.na(libre$fechas2))] %>% gsub(pattern = "^.*([A-Z]{3}).*$", replacement = "\\1") %>% table
libre$fecha <- gsub("DIC","DEC", libre$fechas)
libre$fechas[(libre$fechas != "NULL") & (is.na(libre$fechas2))] %>% gsub(pattern = "^.*([A-Z]{3}).*$", replacement = "\\1") %>% table
gsub(pattern = "^.*([A-Z]{3}).*$", replacement = "\\1", libre$fecha) %>% table()
######Diario Libre#####
libre <- read.csv("https://raw.githubusercontent.com/Pedromoisescamacho/periodicos-dominicanos/master/noticias%20csv/diario_libre_noticias.csv", stringsAsFactors = F)[,-1]
#cambiando nombre de las columnas
colnames(libre)[names(libre) =="contenidos2"] <- "contenidos"
libre$fechas <- gsub("DIC","DEC", libre$fechas)
libre$fechas <- gsub("AGO","AUG", libre$fechas)
libre$fechas[(libre$fechas != "NULL") & (is.na(libre$fechas2))] %>% gsub(pattern = "^.*([A-Z]{3}).*$", replacement = "\\1") %>% table
libre$fechas <- gsub("Ene", "JAN", libre$fechas)
gsub(pattern = "^.+([A-Z]{3}).+$", replacement = "\\1", libre$fecha) %>% table()
libre$fechas <- gsub("DIC","DEC", libre$fechas)
libre$fechas <- gsub("AGO","AUG", libre$fechas)
libre$fechas <- gsub("ENE", "JAN", libre$fechas)
libre$fechas <- gsub("ABR", "JAN", libre$fechas)
gsub(pattern = "^.+([A-Z]{3}).+$", replacement = "\\1", libre$fechas) %>% table()
gsub(pattern = "^.{4,}([A-Z]{3}).+$", replacement = "\\1", libre$fechas) %>% table()
gsub(pattern = "^.{2,}([A-Z]{3}).+$", replacement = "\\1", libre$fechas) %>% table()
gsub(pattern = "^(.{2,})([A-Z]{3}).+$", replacement = "\\1", libre$fechas) %>% table()
gsub(pattern = "^(.{2,})([A-Z]{3}).+$", replacement = "\\2", libre$fechas) %>% table()
gsub(pattern = "^(.{3})([A-Z]{3}).+$", replacement = "\\2", libre$fechas) %>% table()
gsub(pattern = "^(.{4})([A-Z]{3}).+$", replacement = "\\2", libre$fechas) %>% table()
gsub(pattern = "^(.{3})([A-Z]{3}).+$", replacement = "\\2", "NULL")
gsub(pattern = "(^.{3})([A-Z]{3}).+$", replacement = "\\2", "NULL")
gsub(pattern = "(^.{3})([A-Z]{3})(.+$)", replacement = "\\2", "NULL")
gsub(pattern = "^.{3}([A-Z]{3})(.+$)", replacement = "\\2", "NULL")
grepl("^.+([A-Z]{3}).+$","NULL")
libre$fechas2 <- as.POSIXct(libre$fechas,format = "%d %b %Y, %H:%M %p")
libre$fechas2[libre$fechas =! & libre$fechas2 == NA]
libre$fechas2[libre$fechas2 == NA]
summary(libre$fechas2)
drop(libre$fechas2)
libre$fechas <- as.POSIXct(libre$fechas,format = "%d %b %Y, %H:%M %p")
summary(libre$fechas)
names(libre)
libre <- libre[,-4]
summary(libre$titulos)
#limpiando Titulo
libre$titulos[!grep("^[A-z0-9]{5,}$")]
#limpiando Titulo
libre$titulos[!grep("^[A-z0-9]{5,}$", libre$titulos)]
#limpiando Titulo
libre$titulos[!grep("^[A-z0-9]{5,}$", "/tel padre se fue /1")]
#limpiando Titulo
libre$titulos[grep("^[A-z0-9]{5,}$", "/tel padre se fue /1")]
grep("^[A-z0-9]{5,}$", "/tel padre se fue /1")
grepl("^[A-z0-9]{5,}$", "/tel padre se fue /1")
grepl("^[A-z0-9]{5,}$", "tel padre se fue")
grepl("^([A-z0-9]{5,}$)", "tel padre se fue")
grepl("^([A-z]{5,}$)", "tel padre se fue")
grepl("^[A-z]{5,}", "tel padre se fue")
grepl("^[A-z]", "tel padre se fue")
grepl("^[A-z]+", "tel padre se fue")
grepl("^[A-z]+", "0el padre se fue")
grepl("^[A-z]+", "/el padre se fue")
grepl("^[A-z0-9]+", "/el padre se fue")
grepl("^[A-z0-9]+", "el padre se fue")
grepl("[A-z0-9]+", "/el padre se fue")
grepl("^[A-z0-9]+", "/el padre se fue")
grepl("^[A-z0-9]+[A-z0-9]$", "/el padre se fue")
grepl("^[A-z0-9]+[A-z0-9]$", "el padre se fue")
grepl("^[A-z0-9]+[A-z0-9]$", "el padre se fue")
grepl("^[A-z0-9]+$[A-z0-9]", "el padre se fue")
grepl("(^[A-z0-9]+)([A-z0-9])$", "el padre se fue")
grepl("(^[A-z0-9]+)$", "el padre se fue")
grepl("^[A-z0-9]+$", "el padre se fue")
grepl("^[A-z0-9].*[A-10-9]$", "el padre se fue")
grepl("^[A-z0-9].*[A-z0-9]$", "el padre se fue")
grepl("^[A-z0-9].*[A-z0-9]$", "el padre se fue/")
!grepl("^[A-z0-9].*[A-z0-9]$", "el padre se fue/")
#limpiando Titulo
libre$titulos[!grep("^[A-z0-9].*[A-z0-9]$")]
#limpiando Titulo
libre$titulos[!grep("^[A-z0-9].*[A-z0-9]$", libre$titulos)]
View(libre$titulos)
#limpiando contenido
libre$contenidos[!grep("^[A-z0-9].*[A-z0-9]$", libre$contenidos)]
# reading the data
dl_fb_url <- "https://raw.githubusercontent.com/Pedromoisescamacho/periodicos-dominicanos/master/datasets_noticias/diario_libre_fb.csv"
dl_df <- read.csv(dl_fb_url, stringsAsFactors = F)
dl_url <- dl_df$url
dim(dl_url)
lenght(dl_url
)
lenght(dl_url)
length(dl_url)
dim(libre)
#agregando URL
libre$url <- dl_url
summary(libre$url)
summary(libre$fechas)
getwd
getwd()
setwd("~/R/project/periodicos dominicanos/periodicos-dominicanos/noticias csv")
#salvando la tabla
write.csv(libre, "diario_libre_noticias.csv")
year(libre$fechas) %>% length()
year(libre$fechas) %>% summary()
month(libre$fechas) %>% summary()
######listing Diario#####
listin <- read.csv("https://raw.githubusercontent.com/Pedromoisescamacho/periodicos-dominicanos/master/noticias%20csv/listin_diario_noticias.csv" , stringsAsFactors = F)[,-1]
#Revisando cantidad de NA o Null
colSums(is.na(listing))# 0 NA
#Revisando cantidad de NA o Null
colSums(is.na(listin))# 0 NA
colSums(listin== "NULL") # 778, 302, 60: contenido, fechas, titulos respectivamente
apply(listin,2,function(x){sum(is.null(x))}) #0 NULL
names(listin)
#Estandarizando fechas
colnames(listin)[names(listin)== "fechas2"] <- "fechas"
names(listin)
listin$fechas %>% head
f <- listin$fechas %>% head
f
gsub("(^([A-z]{3,},[[:blank:]])([0-9]{2}).*", "\\1",f)
grepl("^([A-z]{4,}),[[:blank:]].*", f)
grepl("^([A-z]{4,}),[[:blank:]]([0-9]{2})", f)
gsub("^([A-z]{4,}),[[:blank:]]([0-9]{2})", "\\1", f)
gsub("^([A-z]{4,}),[[:blank:]]([0-9]{2})", "\1", f)
gsub("^([A-z]{4,}),[[:blank:]]([0-9]{2})", "\\1", f)
gsub("^([A-z]{4,}),[[:blank:]]([0-9]{2}).*$", "\\1", f)
gsub("^([A-z]{4,}),[[:blank:]]([0-9]{2}).*$", "\\2", f)
gsub("^([A-z]{4,}),[[:blank:]]([0-9]{2}).*$", "\\2//1", f)
gsub("^([A-z]{4,}),[[:blank:]]([0-9]{2}).*$", "\\2\\1", f)
gsub("^[A-z]{4,},[[:blank:]]([0-9]{2}).*$", "\\1", f)
f <- sample(listin$fechas,20)
f
gsub("^[A-z]{4,},[[:blank:]]([0-9]{2}).*$", "\\1", f)
grep("[A-z]", "Ã­")
grep("[A-z]", "i")
grepl("[A-z]", "i")
grepl("[A-z]", "Ã­")
gsub("^.*{4,},[[:blank:]]([0-9]{2}).*$", "\\1", f)
gsub("^.{4,},[[:blank:]]([0-9]{2}).*$", "\\1", f)
gsub("^.{4,},[[:blank:]]([0-9]{2}).{4}([A-z]{4,}).{4}([0-9]{4})$$", "\\1", f)
gsub("^.{4,},[[:blank:]]([0-9]{2}).{4}([A-z]{4,}).{4}([0-9]{4})$$", "\\1\\2\\3", f)
gsub("^.{4,},[[:blank:]]([0-9]{2}).{4}([A-z]{3}).{5,}([0-9]{4})$", "\\1", f)
gsub("^.{4,},[[:blank:]]([0-9]{2}).{4}([A-z]{4,}).{4}([0-9]{4})$$", "\\1\\2\\3", f)
gsub("^.{4,},[[:blank:]]([0-9]{2}).{4}([A-z]{3}).{5,}([0-9]{4})$", "\\1", f)
gsub("^.{4,},[[:blank:]]([0-9]{2}).{4}([A-z]{3}).{5,}([0-9]{4})$", "\\1\\2\\3", f)
gsub("^.{4,},[[:blank:]]([0-9]{2}).{4}([A-z]{3}).{5,}([0-9]{4})$", "\\1-\\2-\\3", f)
f <- gsub("DIC","DEC", f) #conversion de abreviatura de mes al correcto en espaÃ±ol
f <- gsub("AGO","AUG", f) #conversion de abreviatura de mes al correcto en espaÃ±ol
f <- gsub("ENE", "JAN", f) #conversion de abreviatura de mes al correcto en espaÃ±ol
f <- gsub("ABR", "JAN", f) #conversion de abreviatura de mes al correcto en espaÃ±ol
f2 <- as.POSIXct(f,format = "%d-%b-%Y")
f2 %>% class()
f2
f
f <- sample(listin$fechas,20)
f <- gsub("^.{4,},[[:blank:]]([0-9]{2}).{4}([A-z]{3}).{5,}([0-9]{4})$", "\\1-\\2-\\3", f)
f <- gsub("DIC","DEC", f) #conversion de abreviatura de mes al correcto en espaÃ±ol
f <- gsub("AGO","AUG", f) #conversion de abreviatura de mes al correcto en espaÃ±ol
f <- gsub("ENE", "JAN", f) #conversion de abreviatura de mes al correcto en espaÃ±ol
f <- gsub("ABR", "JAN", f) #conversion de abreviatura de mes al correcto en espaÃ±ol
f2 <- as.POSIXct(f,format = "%d-%b-%Y")
f2
f2 <-as_date(f)
f2 <-as.Date(f, "%d-%b-%Y")
f2
f
######Diario Libre#####
libre <- read.csv("https://raw.githubusercontent.com/Pedromoisescamacho/periodicos-dominicanos/master/noticias%20csv/diario_libre_noticias.csv", stringsAsFactors = F)[,-1]
#cambiando nombre de las columnas
colnames(libre)[names(libre) =="contenidos2"] <- "contenidos"
libre$fechas <- gsub("DIC","DEC", libre$fechas) #conversion de abreviatura de mes al correcto en espaÃ±ol
libre$fechas <- gsub("AGO","AUG", libre$fechas) #conversion de abreviatura de mes al correcto en espaÃ±ol
libre$fechas <- gsub("ENE", "JAN", libre$fechas) #conversion de abreviatura de mes al correcto en espaÃ±ol
libre$fechas <- gsub("ABR", "ABR", libre$fechas) #conversion de abreviatura de mes al correcto en espaÃ±ol
libre$fechas <- as.POSIXct(libre$fechas,format = "%d %b %Y, %H:%M %p")
######Diario Libre#####
libre <- read.csv("https://raw.githubusercontent.com/Pedromoisescamacho/periodicos-dominicanos/master/noticias%20csv/diario_libre_noticias.csv", stringsAsFactors = F)[,-1]
listin$fechas <- gsub("^.{4,},[[:blank:]]([0-9]{2}).{4}([A-z]{3}).{5,}([0-9]{4})$", "\\1-\\2-\\3", listin$fechas)
listin$fechas <- gsub("dic","dec", listin$fechas) #conversion de abreviatura de mes al correcto en espaÃ±ol
listin$fechas <- gsub("ago","aug", listin$fechas) #conversion de abreviatura de mes al correcto en espaÃ±ol
listin$fechas <- gsub("ene", "jan", listin$fechas) #conversion de abreviatura de mes al correcto en espaÃ±ol
listin$fechas <- gsub("abr", "apr", listin$fechas) #conversion de abreviatura de mes al correcto en espaÃ±ol
f2 <- as.POSIXct(f,format = "%d-%b-%Y")
f2
f1
f
f2 <- dmy()
f2 <- dmy(f)
f2 <- dmy(f,format = "%d-%b-%Y")
f2
toupper(f2)
toupper(f1)
toupper(f)
f2 <- as.Date(toupper(f),format = "%d-%b-%Y")
f2
listin$fechas %>% head()
listin$fechas %>% head() %>% toupper()
f2
f
######listing Diario#####
listin <- read.csv("https://raw.githubusercontent.com/Pedromoisescamacho/periodicos-dominicanos/master/noticias%20csv/listin_diario_noticias.csv" , stringsAsFactors = F)[,-1]
#Estandarizando fechas
colnames(listin)[names(listin)== "fechas2"] <- "fechas"
listin$fechas <- gsub("^.{4,},[[:blank:]]([0-9]{2}).{4}([A-z]{3}).{5,}([0-9]{4})$", "\\1-\\2-\\3", list  in$fechas)
listin$fechas <- gsub("^.{4,},[[:blank:]]([0-9]{2}).{4}([A-z]{3}).{5,}([0-9]{4})$", "\\1-\\2-\\3", listin$fechas)
substr(listin$fechas, 4,6)[1]
substr(listin$fechas, 4,6)[1] %>% table()
substr(listin$fechas, 4,6) %>% table()
listin$fechas <- gsub("^.{4,},[[:blank:]]([0-9]{2}).{4}([A-z]{3}).{5,}([0-9]{4})$", "\\2", listin$fechas)
listin$fechas
######listing Diario#####
listin <- read.csv("https://raw.githubusercontent.com/Pedromoisescamacho/periodicos-dominicanos/master/noticias%20csv/listin_diario_noticias.csv" , stringsAsFactors = F)[,-1]
#Estandarizando fechas
colnames(listin)[names(listin)== "fechas2"] <- "fechas"
listin$fechas2 <- gsub("^.{4,},[[:blank:]]([0-9]{2}).{4}([A-z]{3}).{5,}([0-9]{4})$", "\\2", listin$fechas)
listin$fechas2 %>% head()
listin$fechas2 %>% table()
listin$fechas2 %>% table() %>% length()
listin$fechas2 <- gsub("^.{4,},[[:blank:]]([0-9]{2}).{4}([A-z]{5,})[[:blank:]].+([0-9]{4})$", "\\2", listin$fechas)
listin$fechas2 %>% table()
listin$fechas2 %>% head()
listin$fechas2 %>% table()
listin$fechas2 <- gsub("^.{4,},[[:blank:]]([0-9]{2}).{4}([A-z]{4,})[[:blank:]].+([0-9]{4})$", "\\2", listin$fechas)
listin$fechas2 %>% table()
listin$fechas2 %>% table() %>% sum()
dim(listin)
listin$fechas2 <- gsub("^.{4,},[[:blank:]]([0-9]{2}).{4}([A-z]{3}).{5,}([0-9]{4})$", "\\1-\\2-\\3", listin$fechas)
listin$fechas2 %>% table() %>% sum()
listin$fechas2 %>% table()
listin$fechas <- gsub("dic","dec", listin$fechas) #conversion de abreviatura de mes al correcto en espaÃ±ol
listin$fechas <- gsub("ago","aug", listin$fechas) #conversion de abreviatura de mes al correcto en espaÃ±ol
listin$fechas <- gsub("ene", "jan", listin$fechas) #conversion de abreviatura de mes al correcto en espaÃ±ol
listin$fechas <- gsub("abr", "apr", listin$fechas) #conversion de abreviatura de mes al correcto en espaÃ±ol
listin$fechas2 <- gsub("dic","dec", listin$fechas2) #conversion de abreviatura de mes al correcto en espaÃ±ol
listin$fechas2 <- gsub("ago","aug", listin$fechas2) #conversion de abreviatura de mes al correcto en espaÃ±ol
listin$fechas2 <- gsub("ene", "jan", listin$fechas2) #conversion de abreviatura de mes al correcto en espaÃ±ol
listin$fechas2 <- gsub("abr", "apr", listin$fechas2) #conversion de abreviatura de mes al correcto en espaÃ±ol
f2 <- as.Date(toupper(f),format = "%d-%b-%Y")
f2 %>% head()
listin$fechas3 <- as.Date(toupper(listin$fechas2),format = "%d-%b-%Y")
listin$fechas3 %>% head
listin$fechas3 %>% months() %>% table()
######listing Diario#####
listin <- read.csv("https://raw.githubusercontent.com/Pedromoisescamacho/periodicos-dominicanos/master/noticias%20csv/listin_diario_noticias.csv" , stringsAsFactors = F)[,-1]
######listing Diario#####
listin <- read.csv("https://raw.githubusercontent.com/Pedromoisescamacho/periodicos-dominicanos/master/noticias%20csv/listin_diario_noticias.csv" , stringsAsFactors = F)[,-1]
######listing Diario#####
listin <- read.csv("https://raw.githubusercontent.com/Pedromoisescamacho/periodicos-dominicanos/master/noticias%20csv/listin_diario_noticias.csv" , stringsAsFactors = F)[,-1]
#Revisando cantidad de NA o Null
colSums(is.na(listin))# 0 NA
colSums(listin== "NULL") # 322, 312, 323: contenido, fechas, titulos respectivamente
#Estandarizando fechas
colnames(listin)[names(listin)== "fechas2"] <- "fechas"
listin$fechas <- gsub("^.{4,},[[:blank:]]([0-9]{2}).{4}([A-z]{3}).{5,}([0-9]{4})$", "\\1-\\2-\\3", listin$fechas)
listin$fechas <- gsub("dic","dec", listin$fechas) #conversion de abreviatura de mes al correcto en espaÃ±ol
listin$fechas <- gsub("ago","aug", listin$fechas) #conversion de abreviatura de mes al correcto en espaÃ±ol
listin$fechas <- gsub("ene", "jan", listin$fechas) #conversion de abreviatura de mes al correcto en espaÃ±ol
listin$fechas <- gsub("abr", "apr", listin$fechas) #conversion de abreviatura de mes al correcto en espaÃ±ol
listin$fechas <- as.Date(toupper(listin$fechas),format = "%d-%b-%Y")
listin$fechas3 %>% months() %>% table()
listin$fechas %>% months() %>% table()
summary(listin$fechas)
#limpiando Titulo
listin$titulos %>% head()
#limpiando Titulo
listin$titulos %>% head() trimws()
#limpiando Titulo
listin$titulos %>% head() %>%  trimws()
# reading the data
dl_fb_url <- "https://raw.githubusercontent.com/Pedromoisescamacho/periodicos-dominicanos/master/datasets_noticias/diario_libre_fb.csv"
library(xml2)
library(dplyr)
library(rvest)
noticia <- read_html("https://www.diariolibre.com/noticias/empresario-se-comunico-con-yuniol-ramirez-dos-horas-antes-del-crimen-BC8433883"
)
fecha_cruda <- noticia %>% html_nodes(".art-date") %>% html_text
fecha_cruda %>% trimws()
fecha_cruda
#limpiando Titulo
listin$titulos %>% trimws()
#limpiando Titulo
listin %>% filter(titulos == "NULL") %>% lenght()
#limpiando Titulo
listin %>% filter(titulos == "NULL") %>% length()
#limpiando Titulo
listin %>% filter(titulos == "NULL") %>% select(titulos) %>% length()
#limpiando Titulo
listin %>% filter(titulos == "NULL") %>% nrow()
listin$contenidos %>% head()
listin$titulos <- listin$titulos %>% trimws()
listin$contenidos %>% head()
listin$titulos <- listin$titulos %>% trimws()
listin$titulos %>% head()
#limpiando contenido
listin$contenidos %>% trimws() %>% head
#limpiando contenido
listin$contenidos %>% trimws()[1] %>% print()
#limpiando contenido
trimws(listin$contenidos)[1] %>% print()
listin$contenidos[1]
c <- listin$contenidos[1]
c
gsub("\\n", "", c)
gsub("\\n", "", c) %>% trimws()
#limpiando contenido
libre$contenidos <- gsub("\\n", "", libre$contenidos) %>% trimws()
libre$contenidos %>% head()
# reading the data
ld_fb_url <- "https://raw.githubusercontent.com/Pedromoisescamacho/periodicos-dominicanos/master/datasets_noticias/fb_listin.csv"
ld_df <- read.csv(ld_fb_url, stringsAsFactors = F)
ld_url <- ld_df$url
#agregando URL
listin$url <- ld_url
str(listin)
#limpiando contenido
libre$contenidos <- gsub("\\n", "", libre$contenidos) %>% trimws()
str(listin)
listin$contenidos %>% head()
gsub("\\n", "", libre$contenidos) %>% trimws() %>% head()
#limpiando contenido
libre$contenidos <- gsub("\\n", "", libre$contenidos) %>% trimws()
libre$contenidos %>% str()
#limpiando contenido
listin$contenidos <- gsub("\\n", "", listin$contenidos) %>% trimws()
str(listin)
#agregando URL
listin$url <- ld_url
getwd()
write.csv(libre, "listin_diario_noticias.csv")
